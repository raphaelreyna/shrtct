// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/raphaelreyna/shrtct/internal/generated/models"
)

// UpdateTaskReader is a Reader for the UpdateTask structure.
type UpdateTaskReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateTaskReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateTaskOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateTaskBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateTaskNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewUpdateTaskUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateTaskOK creates a UpdateTaskOK with default headers values
func NewUpdateTaskOK() *UpdateTaskOK {
	return &UpdateTaskOK{}
}

/* UpdateTaskOK describes a response with status code 200, with default header values.

Resource
*/
type UpdateTaskOK struct {
	Payload *models.Task
}

func (o *UpdateTaskOK) Error() string {
	return fmt.Sprintf("[PUT /api/v3/stories/{story-public-id}/tasks/{task-public-id}][%d] updateTaskOK  %+v", 200, o.Payload)
}
func (o *UpdateTaskOK) GetPayload() *models.Task {
	return o.Payload
}

func (o *UpdateTaskOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Task)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateTaskBadRequest creates a UpdateTaskBadRequest with default headers values
func NewUpdateTaskBadRequest() *UpdateTaskBadRequest {
	return &UpdateTaskBadRequest{}
}

/* UpdateTaskBadRequest describes a response with status code 400, with default header values.

Schema mismatch
*/
type UpdateTaskBadRequest struct {
}

func (o *UpdateTaskBadRequest) Error() string {
	return fmt.Sprintf("[PUT /api/v3/stories/{story-public-id}/tasks/{task-public-id}][%d] updateTaskBadRequest ", 400)
}

func (o *UpdateTaskBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateTaskNotFound creates a UpdateTaskNotFound with default headers values
func NewUpdateTaskNotFound() *UpdateTaskNotFound {
	return &UpdateTaskNotFound{}
}

/* UpdateTaskNotFound describes a response with status code 404, with default header values.

Resource does not exist
*/
type UpdateTaskNotFound struct {
}

func (o *UpdateTaskNotFound) Error() string {
	return fmt.Sprintf("[PUT /api/v3/stories/{story-public-id}/tasks/{task-public-id}][%d] updateTaskNotFound ", 404)
}

func (o *UpdateTaskNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateTaskUnprocessableEntity creates a UpdateTaskUnprocessableEntity with default headers values
func NewUpdateTaskUnprocessableEntity() *UpdateTaskUnprocessableEntity {
	return &UpdateTaskUnprocessableEntity{}
}

/* UpdateTaskUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable
*/
type UpdateTaskUnprocessableEntity struct {
}

func (o *UpdateTaskUnprocessableEntity) Error() string {
	return fmt.Sprintf("[PUT /api/v3/stories/{story-public-id}/tasks/{task-public-id}][%d] updateTaskUnprocessableEntity ", 422)
}

func (o *UpdateTaskUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

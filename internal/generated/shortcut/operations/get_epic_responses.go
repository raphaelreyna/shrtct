// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/raphaelreyna/shrtct/internal/generated/models"
)

// GetEpicReader is a Reader for the GetEpic structure.
type GetEpicReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetEpicReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetEpicOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetEpicBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetEpicNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewGetEpicUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetEpicOK creates a GetEpicOK with default headers values
func NewGetEpicOK() *GetEpicOK {
	return &GetEpicOK{}
}

/* GetEpicOK describes a response with status code 200, with default header values.

Resource
*/
type GetEpicOK struct {
	Payload *models.Epic
}

func (o *GetEpicOK) Error() string {
	return fmt.Sprintf("[GET /api/v3/epics/{epic-public-id}][%d] getEpicOK  %+v", 200, o.Payload)
}
func (o *GetEpicOK) GetPayload() *models.Epic {
	return o.Payload
}

func (o *GetEpicOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Epic)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetEpicBadRequest creates a GetEpicBadRequest with default headers values
func NewGetEpicBadRequest() *GetEpicBadRequest {
	return &GetEpicBadRequest{}
}

/* GetEpicBadRequest describes a response with status code 400, with default header values.

Schema mismatch
*/
type GetEpicBadRequest struct {
}

func (o *GetEpicBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v3/epics/{epic-public-id}][%d] getEpicBadRequest ", 400)
}

func (o *GetEpicBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetEpicNotFound creates a GetEpicNotFound with default headers values
func NewGetEpicNotFound() *GetEpicNotFound {
	return &GetEpicNotFound{}
}

/* GetEpicNotFound describes a response with status code 404, with default header values.

Resource does not exist
*/
type GetEpicNotFound struct {
}

func (o *GetEpicNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v3/epics/{epic-public-id}][%d] getEpicNotFound ", 404)
}

func (o *GetEpicNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetEpicUnprocessableEntity creates a GetEpicUnprocessableEntity with default headers values
func NewGetEpicUnprocessableEntity() *GetEpicUnprocessableEntity {
	return &GetEpicUnprocessableEntity{}
}

/* GetEpicUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable
*/
type GetEpicUnprocessableEntity struct {
}

func (o *GetEpicUnprocessableEntity) Error() string {
	return fmt.Sprintf("[GET /api/v3/epics/{epic-public-id}][%d] getEpicUnprocessableEntity ", 422)
}

func (o *GetEpicUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

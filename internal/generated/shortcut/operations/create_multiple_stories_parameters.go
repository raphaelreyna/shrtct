// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/raphaelreyna/shrtct/internal/generated/models"
)

// NewCreateMultipleStoriesParams creates a new CreateMultipleStoriesParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewCreateMultipleStoriesParams() *CreateMultipleStoriesParams {
	return &CreateMultipleStoriesParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewCreateMultipleStoriesParamsWithTimeout creates a new CreateMultipleStoriesParams object
// with the ability to set a timeout on a request.
func NewCreateMultipleStoriesParamsWithTimeout(timeout time.Duration) *CreateMultipleStoriesParams {
	return &CreateMultipleStoriesParams{
		timeout: timeout,
	}
}

// NewCreateMultipleStoriesParamsWithContext creates a new CreateMultipleStoriesParams object
// with the ability to set a context for a request.
func NewCreateMultipleStoriesParamsWithContext(ctx context.Context) *CreateMultipleStoriesParams {
	return &CreateMultipleStoriesParams{
		Context: ctx,
	}
}

// NewCreateMultipleStoriesParamsWithHTTPClient creates a new CreateMultipleStoriesParams object
// with the ability to set a custom HTTPClient for a request.
func NewCreateMultipleStoriesParamsWithHTTPClient(client *http.Client) *CreateMultipleStoriesParams {
	return &CreateMultipleStoriesParams{
		HTTPClient: client,
	}
}

/* CreateMultipleStoriesParams contains all the parameters to send to the API endpoint
   for the create multiple stories operation.

   Typically these are written to a http.Request.
*/
type CreateMultipleStoriesParams struct {

	// CreateStories.
	CreateStories *models.CreateStories

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the create multiple stories params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CreateMultipleStoriesParams) WithDefaults() *CreateMultipleStoriesParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the create multiple stories params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CreateMultipleStoriesParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the create multiple stories params
func (o *CreateMultipleStoriesParams) WithTimeout(timeout time.Duration) *CreateMultipleStoriesParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the create multiple stories params
func (o *CreateMultipleStoriesParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the create multiple stories params
func (o *CreateMultipleStoriesParams) WithContext(ctx context.Context) *CreateMultipleStoriesParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the create multiple stories params
func (o *CreateMultipleStoriesParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the create multiple stories params
func (o *CreateMultipleStoriesParams) WithHTTPClient(client *http.Client) *CreateMultipleStoriesParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the create multiple stories params
func (o *CreateMultipleStoriesParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCreateStories adds the createStories to the create multiple stories params
func (o *CreateMultipleStoriesParams) WithCreateStories(createStories *models.CreateStories) *CreateMultipleStoriesParams {
	o.SetCreateStories(createStories)
	return o
}

// SetCreateStories adds the createStories to the create multiple stories params
func (o *CreateMultipleStoriesParams) SetCreateStories(createStories *models.CreateStories) {
	o.CreateStories = createStories
}

// WriteToRequest writes these params to a swagger request
func (o *CreateMultipleStoriesParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	if o.CreateStories != nil {
		if err := r.SetBodyParam(o.CreateStories); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

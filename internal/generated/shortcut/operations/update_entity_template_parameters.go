// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/raphaelreyna/shrtct/internal/generated/models"
)

// NewUpdateEntityTemplateParams creates a new UpdateEntityTemplateParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewUpdateEntityTemplateParams() *UpdateEntityTemplateParams {
	return &UpdateEntityTemplateParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewUpdateEntityTemplateParamsWithTimeout creates a new UpdateEntityTemplateParams object
// with the ability to set a timeout on a request.
func NewUpdateEntityTemplateParamsWithTimeout(timeout time.Duration) *UpdateEntityTemplateParams {
	return &UpdateEntityTemplateParams{
		timeout: timeout,
	}
}

// NewUpdateEntityTemplateParamsWithContext creates a new UpdateEntityTemplateParams object
// with the ability to set a context for a request.
func NewUpdateEntityTemplateParamsWithContext(ctx context.Context) *UpdateEntityTemplateParams {
	return &UpdateEntityTemplateParams{
		Context: ctx,
	}
}

// NewUpdateEntityTemplateParamsWithHTTPClient creates a new UpdateEntityTemplateParams object
// with the ability to set a custom HTTPClient for a request.
func NewUpdateEntityTemplateParamsWithHTTPClient(client *http.Client) *UpdateEntityTemplateParams {
	return &UpdateEntityTemplateParams{
		HTTPClient: client,
	}
}

/* UpdateEntityTemplateParams contains all the parameters to send to the API endpoint
   for the update entity template operation.

   Typically these are written to a http.Request.
*/
type UpdateEntityTemplateParams struct {

	/* UpdateEntityTemplate.

	   Request parameters for changing either a template's name or any of
	the attributes it is designed to pre-populate.
	*/
	UpdateEntityTemplate *models.UpdateEntityTemplate

	/* EntityTemplatePublicID.

	   The unique ID of the template to be updated.

	   Format: uuid
	*/
	EntityTemplatePublicID strfmt.UUID

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the update entity template params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *UpdateEntityTemplateParams) WithDefaults() *UpdateEntityTemplateParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the update entity template params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *UpdateEntityTemplateParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the update entity template params
func (o *UpdateEntityTemplateParams) WithTimeout(timeout time.Duration) *UpdateEntityTemplateParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the update entity template params
func (o *UpdateEntityTemplateParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the update entity template params
func (o *UpdateEntityTemplateParams) WithContext(ctx context.Context) *UpdateEntityTemplateParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the update entity template params
func (o *UpdateEntityTemplateParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the update entity template params
func (o *UpdateEntityTemplateParams) WithHTTPClient(client *http.Client) *UpdateEntityTemplateParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the update entity template params
func (o *UpdateEntityTemplateParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithUpdateEntityTemplate adds the updateEntityTemplate to the update entity template params
func (o *UpdateEntityTemplateParams) WithUpdateEntityTemplate(updateEntityTemplate *models.UpdateEntityTemplate) *UpdateEntityTemplateParams {
	o.SetUpdateEntityTemplate(updateEntityTemplate)
	return o
}

// SetUpdateEntityTemplate adds the updateEntityTemplate to the update entity template params
func (o *UpdateEntityTemplateParams) SetUpdateEntityTemplate(updateEntityTemplate *models.UpdateEntityTemplate) {
	o.UpdateEntityTemplate = updateEntityTemplate
}

// WithEntityTemplatePublicID adds the entityTemplatePublicID to the update entity template params
func (o *UpdateEntityTemplateParams) WithEntityTemplatePublicID(entityTemplatePublicID strfmt.UUID) *UpdateEntityTemplateParams {
	o.SetEntityTemplatePublicID(entityTemplatePublicID)
	return o
}

// SetEntityTemplatePublicID adds the entityTemplatePublicId to the update entity template params
func (o *UpdateEntityTemplateParams) SetEntityTemplatePublicID(entityTemplatePublicID strfmt.UUID) {
	o.EntityTemplatePublicID = entityTemplatePublicID
}

// WriteToRequest writes these params to a swagger request
func (o *UpdateEntityTemplateParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	if o.UpdateEntityTemplate != nil {
		if err := r.SetBodyParam(o.UpdateEntityTemplate); err != nil {
			return err
		}
	}

	// path param entity-template-public-id
	if err := r.SetPathParam("entity-template-public-id", o.EntityTemplatePublicID.String()); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

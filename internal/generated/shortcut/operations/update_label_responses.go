// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/raphaelreyna/shrtct/internal/generated/models"
)

// UpdateLabelReader is a Reader for the UpdateLabel structure.
type UpdateLabelReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateLabelReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateLabelOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateLabelBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateLabelNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewUpdateLabelUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateLabelOK creates a UpdateLabelOK with default headers values
func NewUpdateLabelOK() *UpdateLabelOK {
	return &UpdateLabelOK{}
}

/* UpdateLabelOK describes a response with status code 200, with default header values.

Resource
*/
type UpdateLabelOK struct {
	Payload *models.Label
}

func (o *UpdateLabelOK) Error() string {
	return fmt.Sprintf("[PUT /api/v3/labels/{label-public-id}][%d] updateLabelOK  %+v", 200, o.Payload)
}
func (o *UpdateLabelOK) GetPayload() *models.Label {
	return o.Payload
}

func (o *UpdateLabelOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Label)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateLabelBadRequest creates a UpdateLabelBadRequest with default headers values
func NewUpdateLabelBadRequest() *UpdateLabelBadRequest {
	return &UpdateLabelBadRequest{}
}

/* UpdateLabelBadRequest describes a response with status code 400, with default header values.

Schema mismatch
*/
type UpdateLabelBadRequest struct {
}

func (o *UpdateLabelBadRequest) Error() string {
	return fmt.Sprintf("[PUT /api/v3/labels/{label-public-id}][%d] updateLabelBadRequest ", 400)
}

func (o *UpdateLabelBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateLabelNotFound creates a UpdateLabelNotFound with default headers values
func NewUpdateLabelNotFound() *UpdateLabelNotFound {
	return &UpdateLabelNotFound{}
}

/* UpdateLabelNotFound describes a response with status code 404, with default header values.

Resource does not exist
*/
type UpdateLabelNotFound struct {
}

func (o *UpdateLabelNotFound) Error() string {
	return fmt.Sprintf("[PUT /api/v3/labels/{label-public-id}][%d] updateLabelNotFound ", 404)
}

func (o *UpdateLabelNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateLabelUnprocessableEntity creates a UpdateLabelUnprocessableEntity with default headers values
func NewUpdateLabelUnprocessableEntity() *UpdateLabelUnprocessableEntity {
	return &UpdateLabelUnprocessableEntity{}
}

/* UpdateLabelUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable
*/
type UpdateLabelUnprocessableEntity struct {
}

func (o *UpdateLabelUnprocessableEntity) Error() string {
	return fmt.Sprintf("[PUT /api/v3/labels/{label-public-id}][%d] updateLabelUnprocessableEntity ", 422)
}

func (o *UpdateLabelUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/raphaelreyna/shrtct/internal/generated/models"
)

// GetTaskReader is a Reader for the GetTask structure.
type GetTaskReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetTaskReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetTaskOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetTaskBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetTaskNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewGetTaskUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetTaskOK creates a GetTaskOK with default headers values
func NewGetTaskOK() *GetTaskOK {
	return &GetTaskOK{}
}

/* GetTaskOK describes a response with status code 200, with default header values.

Resource
*/
type GetTaskOK struct {
	Payload *models.Task
}

func (o *GetTaskOK) Error() string {
	return fmt.Sprintf("[GET /api/v3/stories/{story-public-id}/tasks/{task-public-id}][%d] getTaskOK  %+v", 200, o.Payload)
}
func (o *GetTaskOK) GetPayload() *models.Task {
	return o.Payload
}

func (o *GetTaskOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Task)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTaskBadRequest creates a GetTaskBadRequest with default headers values
func NewGetTaskBadRequest() *GetTaskBadRequest {
	return &GetTaskBadRequest{}
}

/* GetTaskBadRequest describes a response with status code 400, with default header values.

Schema mismatch
*/
type GetTaskBadRequest struct {
}

func (o *GetTaskBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v3/stories/{story-public-id}/tasks/{task-public-id}][%d] getTaskBadRequest ", 400)
}

func (o *GetTaskBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetTaskNotFound creates a GetTaskNotFound with default headers values
func NewGetTaskNotFound() *GetTaskNotFound {
	return &GetTaskNotFound{}
}

/* GetTaskNotFound describes a response with status code 404, with default header values.

Resource does not exist
*/
type GetTaskNotFound struct {
}

func (o *GetTaskNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v3/stories/{story-public-id}/tasks/{task-public-id}][%d] getTaskNotFound ", 404)
}

func (o *GetTaskNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetTaskUnprocessableEntity creates a GetTaskUnprocessableEntity with default headers values
func NewGetTaskUnprocessableEntity() *GetTaskUnprocessableEntity {
	return &GetTaskUnprocessableEntity{}
}

/* GetTaskUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable
*/
type GetTaskUnprocessableEntity struct {
}

func (o *GetTaskUnprocessableEntity) Error() string {
	return fmt.Sprintf("[GET /api/v3/stories/{story-public-id}/tasks/{task-public-id}][%d] getTaskUnprocessableEntity ", 422)
}

func (o *GetTaskUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

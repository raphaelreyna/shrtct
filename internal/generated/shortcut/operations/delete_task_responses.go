// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// DeleteTaskReader is a Reader for the DeleteTask structure.
type DeleteTaskReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteTaskReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteTaskNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteTaskBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteTaskNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewDeleteTaskUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteTaskNoContent creates a DeleteTaskNoContent with default headers values
func NewDeleteTaskNoContent() *DeleteTaskNoContent {
	return &DeleteTaskNoContent{}
}

/* DeleteTaskNoContent describes a response with status code 204, with default header values.

No Content
*/
type DeleteTaskNoContent struct {
}

func (o *DeleteTaskNoContent) Error() string {
	return fmt.Sprintf("[DELETE /api/v3/stories/{story-public-id}/tasks/{task-public-id}][%d] deleteTaskNoContent ", 204)
}

func (o *DeleteTaskNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteTaskBadRequest creates a DeleteTaskBadRequest with default headers values
func NewDeleteTaskBadRequest() *DeleteTaskBadRequest {
	return &DeleteTaskBadRequest{}
}

/* DeleteTaskBadRequest describes a response with status code 400, with default header values.

Schema mismatch
*/
type DeleteTaskBadRequest struct {
}

func (o *DeleteTaskBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /api/v3/stories/{story-public-id}/tasks/{task-public-id}][%d] deleteTaskBadRequest ", 400)
}

func (o *DeleteTaskBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteTaskNotFound creates a DeleteTaskNotFound with default headers values
func NewDeleteTaskNotFound() *DeleteTaskNotFound {
	return &DeleteTaskNotFound{}
}

/* DeleteTaskNotFound describes a response with status code 404, with default header values.

Resource does not exist
*/
type DeleteTaskNotFound struct {
}

func (o *DeleteTaskNotFound) Error() string {
	return fmt.Sprintf("[DELETE /api/v3/stories/{story-public-id}/tasks/{task-public-id}][%d] deleteTaskNotFound ", 404)
}

func (o *DeleteTaskNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteTaskUnprocessableEntity creates a DeleteTaskUnprocessableEntity with default headers values
func NewDeleteTaskUnprocessableEntity() *DeleteTaskUnprocessableEntity {
	return &DeleteTaskUnprocessableEntity{}
}

/* DeleteTaskUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable
*/
type DeleteTaskUnprocessableEntity struct {
}

func (o *DeleteTaskUnprocessableEntity) Error() string {
	return fmt.Sprintf("[DELETE /api/v3/stories/{story-public-id}/tasks/{task-public-id}][%d] deleteTaskUnprocessableEntity ", 422)
}

func (o *DeleteTaskUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

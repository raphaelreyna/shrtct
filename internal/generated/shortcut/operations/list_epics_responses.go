// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/raphaelreyna/shrtct/internal/generated/models"
)

// ListEpicsReader is a Reader for the ListEpics structure.
type ListEpicsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListEpicsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListEpicsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewListEpicsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListEpicsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewListEpicsUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewListEpicsOK creates a ListEpicsOK with default headers values
func NewListEpicsOK() *ListEpicsOK {
	return &ListEpicsOK{}
}

/* ListEpicsOK describes a response with status code 200, with default header values.

Resource
*/
type ListEpicsOK struct {
	Payload []*models.EpicSlim
}

func (o *ListEpicsOK) Error() string {
	return fmt.Sprintf("[GET /api/v3/epics][%d] listEpicsOK  %+v", 200, o.Payload)
}
func (o *ListEpicsOK) GetPayload() []*models.EpicSlim {
	return o.Payload
}

func (o *ListEpicsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListEpicsBadRequest creates a ListEpicsBadRequest with default headers values
func NewListEpicsBadRequest() *ListEpicsBadRequest {
	return &ListEpicsBadRequest{}
}

/* ListEpicsBadRequest describes a response with status code 400, with default header values.

Schema mismatch
*/
type ListEpicsBadRequest struct {
}

func (o *ListEpicsBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v3/epics][%d] listEpicsBadRequest ", 400)
}

func (o *ListEpicsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListEpicsNotFound creates a ListEpicsNotFound with default headers values
func NewListEpicsNotFound() *ListEpicsNotFound {
	return &ListEpicsNotFound{}
}

/* ListEpicsNotFound describes a response with status code 404, with default header values.

Resource does not exist
*/
type ListEpicsNotFound struct {
}

func (o *ListEpicsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v3/epics][%d] listEpicsNotFound ", 404)
}

func (o *ListEpicsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListEpicsUnprocessableEntity creates a ListEpicsUnprocessableEntity with default headers values
func NewListEpicsUnprocessableEntity() *ListEpicsUnprocessableEntity {
	return &ListEpicsUnprocessableEntity{}
}

/* ListEpicsUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable
*/
type ListEpicsUnprocessableEntity struct {
}

func (o *ListEpicsUnprocessableEntity) Error() string {
	return fmt.Sprintf("[GET /api/v3/epics][%d] listEpicsUnprocessableEntity ", 422)
}

func (o *ListEpicsUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

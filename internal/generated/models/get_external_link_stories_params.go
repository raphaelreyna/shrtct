// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// GetExternalLinkStoriesParams get external link stories params
//
// swagger:model GetExternalLinkStoriesParams
type GetExternalLinkStoriesParams struct {

	// The external link associated with one or more stories.
	// Required: true
	// Max Length: 2048
	// Pattern: ^https?://.+$
	ExternalLink *string `json:"external_link"`
}

// Validate validates this get external link stories params
func (m *GetExternalLinkStoriesParams) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateExternalLink(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *GetExternalLinkStoriesParams) validateExternalLink(formats strfmt.Registry) error {

	if err := validate.Required("external_link", "body", m.ExternalLink); err != nil {
		return err
	}

	if err := validate.MaxLength("external_link", "body", *m.ExternalLink, 2048); err != nil {
		return err
	}

	if err := validate.Pattern("external_link", "body", *m.ExternalLink, `^https?://.+$`); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this get external link stories params based on context it is used
func (m *GetExternalLinkStoriesParams) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *GetExternalLinkStoriesParams) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *GetExternalLinkStoriesParams) UnmarshalBinary(b []byte) error {
	var res GetExternalLinkStoriesParams
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

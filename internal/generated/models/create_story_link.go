// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// CreateStoryLink create story link
//
// swagger:model CreateStoryLink
type CreateStoryLink struct {

	// The ID of the object Story.
	// Required: true
	ObjectID *int64 `json:"object_id"`

	// The ID of the subject Story.
	// Required: true
	SubjectID *int64 `json:"subject_id"`

	// The type of link.
	// Required: true
	// Enum: [blocks duplicates relates to]
	Verb *string `json:"verb"`
}

// Validate validates this create story link
func (m *CreateStoryLink) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateObjectID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSubjectID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateVerb(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CreateStoryLink) validateObjectID(formats strfmt.Registry) error {

	if err := validate.Required("object_id", "body", m.ObjectID); err != nil {
		return err
	}

	return nil
}

func (m *CreateStoryLink) validateSubjectID(formats strfmt.Registry) error {

	if err := validate.Required("subject_id", "body", m.SubjectID); err != nil {
		return err
	}

	return nil
}

var createStoryLinkTypeVerbPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["blocks","duplicates","relates to"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		createStoryLinkTypeVerbPropEnum = append(createStoryLinkTypeVerbPropEnum, v)
	}
}

const (

	// CreateStoryLinkVerbBlocks captures enum value "blocks"
	CreateStoryLinkVerbBlocks string = "blocks"

	// CreateStoryLinkVerbDuplicates captures enum value "duplicates"
	CreateStoryLinkVerbDuplicates string = "duplicates"

	// CreateStoryLinkVerbRelatesTo captures enum value "relates to"
	CreateStoryLinkVerbRelatesTo string = "relates to"
)

// prop value enum
func (m *CreateStoryLink) validateVerbEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, createStoryLinkTypeVerbPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *CreateStoryLink) validateVerb(formats strfmt.Registry) error {

	if err := validate.Required("verb", "body", m.Verb); err != nil {
		return err
	}

	// value enum
	if err := m.validateVerbEnum("verb", "body", *m.Verb); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this create story link based on context it is used
func (m *CreateStoryLink) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *CreateStoryLink) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CreateStoryLink) UnmarshalBinary(b []byte) error {
	var res CreateStoryLink
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
